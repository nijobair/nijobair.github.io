var hljs=function(){"use strict";function e(n){return n instanceof Map?n.clear=n.delete=n.set=(()=>{throw Error("map is read-only")}):n instanceof Set&&(n.add=n.clear=n.delete=(()=>{throw Error("set is read-only")})),Object.freeze(n),Object.getOwnPropertyNames(n).forEach(t=>{const a=n[t],r=typeof a;"object"!==r&&"function"!==r||Object.isFrozen(a)||e(a)}),n}function n(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function t(e,...n){const t=Object.create(null);for(const n in e)t[n]=e[n];return n.forEach(e=>{for(const n in e)t[n]=e[n]}),t}function a(e){return e?"string"==typeof e?e:e.source:null}function r(e){return o("(?=",e,")")}function s(e){return o("(?:",e,")*")}function i(e){return o("(?:",e,")?")}function o(...e){return e.map(e=>a(e)).join("")}function c(...e){const n=(e=>{const n=e[e.length-1];return"object"==typeof n&&n.constructor===Object?(e.splice(e.length-1,1),n):{}})(e);return"("+(n.capture?"":"?:")+e.map(e=>a(e)).join("|")+")"}function l(e){return RegExp(e.toString()+"|").exec("").length-1}function E(e,{joinWith:n}){let t=0;return e.map(e=>{t+=1;const n=t;let r=a(e),s="";for(;r.length>0;){const e=_.exec(r);if(!e){s+=r;break}s+=r.substring(0,e.index),r=r.substring(e.index+e[0].length),"\\"===e[0][0]&&e[1]?s+="\\"+(Number(e[1])+n):(s+=e[0],"("===e[0]&&t++)}return s}).map(e=>`(${e})`).join(n)}function g(e,n){"."===e.input[e.index-1]&&n.ignoreMatch()}function u(e,n){void 0!==e.className&&(e.scope=e.className,delete e.className)}function d(e,n){n&&e.beginKeywords&&(e.begin="\\b("+e.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",e.__beforeBegin=g,e.keywords=e.keywords||e.beginKeywords,delete e.beginKeywords,void 0===e.relevance&&(e.relevance=0))}function A(e,n){Array.isArray(e.illegal)&&(e.illegal=c(...e.illegal))}function N(e,n){if(e.match){if(e.begin||e.end)throw Error("begin & end are not supported with match");e.begin=e.match,delete e.match}}function T(e,n){void 0===e.relevance&&(e.relevance=1)}function I(e,n,t=$){function a(e,t){n&&(t=t.map(e=>e.toLowerCase())),t.forEach(n=>{const t=n.split("|");r[t[0]]=[e,S(t[0],t[1])]})}const r=Object.create(null);return"string"==typeof e?a(t,e.split(" ")):Array.isArray(e)?a(t,e):Object.keys(e).forEach(t=>{Object.assign(r,I(e[t],n,t))}),r}function S(e,n){return n?Number(n):(e=>X.includes(e.toLowerCase()))(e)?0:1}function R(e,n,{key:t}){let a=0;const r=e[t],s={},i={};for(let e=1;e<=n.length;e++)i[e+a]=r[e],s[e+a]=!0,a+=l(n[e-1]);e[t]=i,e[t]._emit=s,e[t]._multi=!0}function h(e){(e=>{e.scope&&"object"==typeof e.scope&&null!==e.scope&&(e.beginScope=e.scope,delete e.scope)})(e),"string"==typeof e.beginScope&&(e.beginScope={_wrap:e.beginScope}),"string"==typeof e.endScope&&(e.endScope={_wrap:e.endScope}),(e=>{if(Array.isArray(e.begin)){if(e.skip||e.excludeBegin||e.returnBegin)throw K("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),Z;if("object"!=typeof e.beginScope||null===e.beginScope)throw K("beginScope must be object"),Z;R(e,e.begin,{key:"beginScope"}),e.begin=E(e.begin,{joinWith:""})}})(e),(e=>{if(Array.isArray(e.end)){if(e.skip||e.excludeEnd||e.returnEnd)throw K("skip, excludeEnd, returnEnd not compatible with endScope: {}"),Z;if("object"!=typeof e.endScope||null===e.endScope)throw K("endScope must be object"),Z;R(e,e.end,{key:"endScope"}),e.end=E(e.end,{joinWith:""})}})(e)}function b(e){function n(n,t){return RegExp(a(n),"m"+(e.case_insensitive?"i":"")+(e.unicodeRegex?"u":"")+(t?"g":""))}class r{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(e,n){n.position=this.position++,this.matchIndexes[this.matchAt]=n,this.regexes.push([n,e]),this.matchAt+=l(e)+1}compile(){0===this.regexes.length&&(this.exec=(()=>null));const e=this.regexes.map(e=>e[1]);this.matcherRe=n(E(e,{joinWith:"|"}),!0),this.lastIndex=0}exec(e){this.matcherRe.lastIndex=this.lastIndex;const n=this.matcherRe.exec(e);if(!n)return null;const t=n.findIndex((e,n)=>n>0&&void 0!==e),a=this.matchIndexes[t];return n.splice(0,t),Object.assign(n,a)}}class s{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(e){if(this.multiRegexes[e])return this.multiRegexes[e];const n=new r;return this.rules.slice(e).forEach(([e,t])=>n.addRule(e,t)),n.compile(),this.multiRegexes[e]=n,n}resumingScanAtSamePosition(){return 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(e,n){this.rules.push([e,n]),"begin"===n.type&&this.count++}exec(e){const n=this.getMatcher(this.regexIndex);n.lastIndex=this.lastIndex;let t=n.exec(e);if(this.resumingScanAtSamePosition())if(t&&t.index===this.lastIndex);else{const n=this.getMatcher(0);n.lastIndex=this.lastIndex+1,t=n.exec(e)}return t&&(this.regexIndex+=t.position+1,this.regexIndex===this.count&&this.considerAll()),t}}if(e.compilerExtensions||(e.compilerExtensions=[]),e.contains&&e.contains.includes("self"))throw Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return e.classNameAliases=t(e.classNameAliases||{}),function r(i,o){const c=i;if(i.isCompiled)return c;[u,N,h,j].forEach(e=>e(i,o)),e.compilerExtensions.forEach(e=>e(i,o)),i.__beforeBegin=null,[d,A,T].forEach(e=>e(i,o)),i.isCompiled=!0;let l=null;return"object"==typeof i.keywords&&i.keywords.$pattern&&(i.keywords=Object.assign({},i.keywords),l=i.keywords.$pattern,delete i.keywords.$pattern),l=l||/\w+/,i.keywords&&(i.keywords=I(i.keywords,e.case_insensitive)),c.keywordPatternRe=n(l,!0),o&&(i.begin||(i.begin=/\B|\b/),c.beginRe=n(c.begin),i.end||i.endsWithParent||(i.end=/\B|\b/),i.end&&(c.endRe=n(c.end)),c.terminatorEnd=a(c.end)||"",i.endsWithParent&&o.terminatorEnd&&(c.terminatorEnd+=(i.end?"|":"")+o.terminatorEnd)),i.illegal&&(c.illegalRe=n(i.illegal)),i.contains||(i.contains=[]),i.contains=[].concat(...i.contains.map(e=>(e=>(e.variants&&!e.cachedVariants&&(e.cachedVariants=e.variants.map(n=>t(e,{variants:null},n))),e.cachedVariants?e.cachedVariants:O(e)?t(e,{starts:e.starts?t(e.starts):null}):Object.isFrozen(e)?t(e):e))("self"===e?i:e))),i.contains.forEach(e=>{r(e,c)}),i.starts&&r(i.starts,o),c.matcher=(e=>{const n=new s;return e.contains.forEach(e=>n.addRule(e.begin,{rule:e,type:"begin"})),e.terminatorEnd&&n.addRule(e.terminatorEnd,{type:"end"}),e.illegal&&n.addRule(e.illegal,{type:"illegal"}),n})(c),c}(e)}function O(e){return!!e&&(e.endsWithParent||O(e.starts))}class m{constructor(e){void 0===e.data&&(e.data={}),this.data=e.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}const p=e=>!!e.scope;class C{constructor(e,n){this.buffer="",this.classPrefix=n.classPrefix,e.walk(this)}addText(e){this.buffer+=n(e)}openNode(e){if(!p(e))return;const n=((e,{prefix:n})=>{if(e.startsWith("language:"))return e.replace("language:","language-");if(e.includes(".")){const t=e.split(".");return[`${n}${t.shift()}`,...t.map((e,n)=>`${e}${"_".repeat(n+1)}`)].join(" ")}return`${n}${e}`})(e.scope,{prefix:this.classPrefix});this.span(n)}closeNode(e){p(e)&&(this.buffer+="</span>")}value(){return this.buffer}span(e){this.buffer+=`<span class="${e}">`}}const L=(e={})=>{const n={children:[]};return Object.assign(n,e),n};class f{constructor(){this.rootNode=L(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(e){this.top.children.push(e)}openNode(e){const n=L({scope:e});this.add(n),this.stack.push(n)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(e){return this.constructor._walk(e,this.rootNode)}static _walk(e,n){return"string"==typeof n?e.addText(n):n.children&&(e.openNode(n),n.children.forEach(n=>this._walk(e,n)),e.closeNode(n)),e}static _collapse(e){"string"!=typeof e&&e.children&&(e.children.every(e=>"string"==typeof e)?e.children=[e.children.join("")]:e.children.forEach(e=>{f._collapse(e)}))}}class D extends f{constructor(e){super(),this.options=e}addText(e){""!==e&&this.add(e)}startScope(e){this.openNode(e)}endScope(){this.closeNode()}__addSublanguage(e,n){const t=e.root;n&&(t.scope="language:"+n),this.add(t)}toHTML(){return new C(this,this.options).value()}finalize(){return this.closeAllNodes(),!0}}const _=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./,M="[a-zA-Z]\\w*",y="[a-zA-Z_]\\w*",U="\\b\\d+(\\.\\d+)?",P="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",v="\\b(0b[01]+)",B={begin:"\\\\[\\s\\S]",relevance:0},x={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[B]},w={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[B]},F=(e,n,a={})=>{const r=t({scope:"comment",begin:e,end:n,contains:[]},a);r.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const s=c("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return r.contains.push({begin:o(/[ ]+/,"(",s,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),r},k=F("//","$"),H=F("/\\*","\\*/"),V=F("#","$");var G=Object.freeze({__proto__:null,APOS_STRING_MODE:x,BACKSLASH_ESCAPE:B,BINARY_NUMBER_MODE:{scope:"number",begin:v,relevance:0},BINARY_NUMBER_RE:v,COMMENT:F,C_BLOCK_COMMENT_MODE:H,C_LINE_COMMENT_MODE:k,C_NUMBER_MODE:{scope:"number",begin:P,relevance:0},C_NUMBER_RE:P,END_SAME_AS_BEGIN:e=>Object.assign(e,{"on:begin":(e,n)=>{n.data._beginMatch=e[1]},"on:end":(e,n)=>{n.data._beginMatch!==e[1]&&n.ignoreMatch()}}),HASH_COMMENT_MODE:V,IDENT_RE:M,MATCH_NOTHING_RE:/\b\B/,METHOD_GUARD:{begin:"\\.\\s*"+y,relevance:0},NUMBER_MODE:{scope:"number",begin:U,relevance:0},NUMBER_RE:U,PHRASAL_WORDS_MODE:{begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},QUOTE_STRING_MODE:w,REGEXP_MODE:{scope:"regexp",begin:/\/(?=[^/\n]*\/)/,end:/\/[gimuy]*/,contains:[B,{begin:/\[/,end:/\]/,relevance:0,contains:[B]}]},RE_STARTERS_RE:"!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",SHEBANG:(e={})=>{const n=/^#![ ]*\//;return e.binary&&(e.begin=o(n,/.*\b/,e.binary,/\b.*/)),t({scope:"meta",begin:n,end:/$/,relevance:0,"on:begin":(e,n)=>{0!==e.index&&n.ignoreMatch()}},e)},TITLE_MODE:{scope:"title",begin:M,relevance:0},UNDERSCORE_IDENT_RE:y,UNDERSCORE_TITLE_MODE:{scope:"title",begin:y,relevance:0}});const j=(e,n)=>{if(!e.beforeMatch)return;if(e.starts)throw Error("beforeMatch cannot be used with starts");const t=Object.assign({},e);Object.keys(e).forEach(n=>{delete e[n]}),e.keywords=t.keywords,e.begin=o(t.beforeMatch,r(t.begin)),e.starts={relevance:0,contains:[Object.assign(t,{endsParent:!0})]},e.relevance=0,delete t.beforeMatch},X=["of","and","for","in","not","or","if","then","parent","list","value"],$="keyword",Y={},K=e=>{console.error(e)},W=(e,...n)=>{console.log("WARN: "+e,...n)},z=(e,n)=>{Y[`${e}/${n}`]||(console.log(`Deprecated as of ${e}. ${n}`),Y[`${e}/${n}`]=!0)},Z=Error();class Q extends Error{constructor(e,n){super(e),this.name="HTMLInjectionError",this.html=n}}const q=n,J=t,ee=Symbol("nomatch"),ne=n=>{function t(e){return C.noHighlightRe.test(e)}function a(e,n,t){let a="",r="";"object"==typeof n?(a=e,t=n.ignoreIllegals,r=n.language):(z("10.7.0","highlight(lang, code, ...args) has been deprecated."),z("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),r=e,a=n),void 0===t&&(t=!0);const s={code:a,language:r};T("before:highlight",s);const i=s.result?s.result:l(s.language,s.code,t);return i.code=s.code,T("after:highlight",i),i}function l(e,n,t,a){function r(){if(!f.keywords)return void _.addText(M);let e=0;f.keywordPatternRe.lastIndex=0;let n=f.keywordPatternRe.exec(M),t="";for(;n;){t+=M.substring(e,n.index);const r=R.case_insensitive?n[0].toLowerCase():n[0],s=(a=r,f.keywords[a]);if(s){const[e,a]=s;if(_.addText(t),t="",T[r]=(T[r]||0)+1,T[r]<=7&&(y+=a),e.startsWith("_"))t+=n[0];else{const t=R.classNameAliases[e]||e;i(n[0],t)}}else t+=n[0];e=f.keywordPatternRe.lastIndex,n=f.keywordPatternRe.exec(M)}var a;t+=M.substring(e),_.addText(t)}function s(){null!=f.subLanguage?(()=>{if(""===M)return;let e=null;if("string"==typeof f.subLanguage){if(!I[f.subLanguage])return void _.addText(M);e=l(f.subLanguage,M,!0,D[f.subLanguage]),D[f.subLanguage]=e._top}else e=E(M,f.subLanguage.length?f.subLanguage:null);f.relevance>0&&(y+=e.relevance),_.__addSublanguage(e._emitter,e.language)})():r(),M=""}function i(e,n){""!==e&&(_.startScope(n),_.addText(e),_.endScope())}function o(e,n){let t=1;const a=n.length-1;for(;t<=a;){if(!e._emit[t]){t++;continue}const a=R.classNameAliases[e[t]]||e[t],s=n[t];a?i(s,a):(M=s,r(),M=""),t++}}function c(e,n){return e.scope&&"string"==typeof e.scope&&_.openNode(R.classNameAliases[e.scope]||e.scope),e.beginScope&&(e.beginScope._wrap?(i(M,R.classNameAliases[e.beginScope._wrap]||e.beginScope._wrap),M=""):e.beginScope._multi&&(o(e.beginScope,n),M="")),f=Object.create(e,{parent:{value:f}}),f}function g(e,n,t){let a=((e,n)=>{const t=e&&e.exec(n);return t&&0===t.index})(e.endRe,t);if(a){if(e["on:end"]){const t=new m(e);e["on:end"](n,t),t.isMatchIgnored&&(a=!1)}if(a){for(;e.endsParent&&e.parent;)e=e.parent;return e}}if(e.endsWithParent)return g(e.parent,n,t)}function u(e){return 0===f.matcher.regexIndex?(M+=e[0],1):(v=!0,0)}function A(e){const t=e[0],a=n.substring(e.index),r=g(f,e,a);if(!r)return ee;const l=f;f.endScope&&f.endScope._wrap?(s(),i(t,f.endScope._wrap)):f.endScope&&f.endScope._multi?(s(),o(f.endScope,e)):l.skip?M+=t:(l.returnEnd||l.excludeEnd||(M+=t),s(),l.excludeEnd&&(M=t));do{f.scope&&_.closeNode(),f.skip||f.subLanguage||(y+=f.relevance),f=f.parent}while(f!==r.parent);return r.starts&&c(r.starts,e),l.returnEnd?0:t.length}function N(a,r){const i=r&&r[0];if(M+=a,null==i)return s(),0;if("begin"===S.type&&"end"===r.type&&S.index===r.index&&""===i){if(M+=n.slice(r.index,r.index+1),!h){const n=Error(`0 width match regex (${e})`);throw n.languageName=e,n.badRule=S.rule,n}return 1}if(S=r,"begin"===r.type)return(e=>{const n=e[0],t=e.rule,a=new m(t),r=[t.__beforeBegin,t["on:begin"]];for(const t of r)if(t&&(t(e,a),a.isMatchIgnored))return u(n);return t.skip?M+=n:(t.excludeBegin&&(M+=n),s(),t.returnBegin||t.excludeBegin||(M=n)),c(t,e),t.returnBegin?0:n.length})(r);if("illegal"===r.type&&!t){const e=Error('Illegal lexeme "'+i+'" for mode "'+(f.scope||"<unnamed>")+'"');throw e.mode=f,e}if("end"===r.type){const e=A(r);if(e!==ee)return e}if("illegal"===r.type&&""===i)return 1;if(P>1e5&&P>3*r.index)throw Error("potential infinite loop, way more iterations than matches");return M+=i,i.length}const T=Object.create(null);let S={};const R=d(e);if(!R)throw K(O.replace("{}",e)),Error('Unknown language: "'+e+'"');const p=b(R);let L="",f=a||p;const D={},_=new C.__emitter(C);(()=>{const e=[];for(let n=f;n!==R;n=n.parent)n.scope&&e.unshift(n.scope);e.forEach(e=>_.openNode(e))})();let M="",y=0,U=0,P=0,v=!1;try{if(R.__emitTokens)R.__emitTokens(n,_);else{for(f.matcher.considerAll();;){P++,v?v=!1:f.matcher.considerAll(),f.matcher.lastIndex=U;const e=f.matcher.exec(n);if(!e)break;const t=N(n.substring(U,e.index),e);U=e.index+t}N(n.substring(U))}return _.finalize(),L=_.toHTML(),{language:e,value:L,relevance:y,illegal:!1,_emitter:_,_top:f}}catch(t){if(t.message&&t.message.includes("Illegal"))return{language:e,value:q(n),illegal:!0,relevance:0,_illegalBy:{message:t.message,index:U,context:n.slice(U-100,U+100),mode:t.mode,resultSoFar:L},_emitter:_};if(h)return{language:e,value:q(n),illegal:!1,relevance:0,errorRaised:t,_emitter:_,_top:f};throw t}}function E(e,n){n=n||C.languages||Object.keys(I);const t=(e=>{const n={value:q(e),illegal:!1,relevance:0,_top:p,_emitter:new C.__emitter(C)};return n._emitter.addText(e),n})(e),a=n.filter(d).filter(N).map(n=>l(n,e,!1));a.unshift(t);const r=a.sort((e,n)=>{if(e.relevance!==n.relevance)return n.relevance-e.relevance;if(e.language&&n.language){if(d(e.language).supersetOf===n.language)return 1;if(d(n.language).supersetOf===e.language)return-1}return 0}),[s,i]=r,o=s;return o.secondBest=i,o}function g(e){let n=null;const r=(e=>{let n=e.className+" ";n+=e.parentNode?e.parentNode.className:"";const a=C.languageDetectRe.exec(n);if(a){const n=d(a[1]);return n||(W(O.replace("{}",a[1])),W("Falling back to no-highlight mode for this block.",e)),n?a[1]:"no-highlight"}return n.split(/\s+/).find(e=>t(e)||d(e))})(e);if(t(r))return;if(T("before:highlightElement",{el:e,language:r}),e.dataset.highlighted)return void console.log("Element previously highlighted. To highlight again, first unset `dataset.highlighted`.",e);if(e.children.length>0&&(C.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn(e)),C.throwUnescapedHTML))throw new Q("One of your code blocks includes unescaped HTML.",e.innerHTML);n=e;const s=n.textContent,i=r?a(s,{language:r,ignoreIllegals:!0}):E(s);e.innerHTML=i.value,e.dataset.highlighted="yes",((e,n,t)=>{const a=n&&S[n]||t;e.classList.add("hljs"),e.classList.add("language-"+a)})(e,r,i.language),e.result={language:i.language,re:i.relevance,relevance:i.relevance},i.secondBest&&(e.secondBest={language:i.secondBest.language,relevance:i.secondBest.relevance}),T("after:highlightElement",{el:e,result:i,text:s})}function u(){"loading"!==document.readyState?document.querySelectorAll(C.cssSelector).forEach(g):L=!0}function d(e){return e=(e||"").toLowerCase(),I[e]||I[S[e]]}function A(e,{languageName:n}){"string"==typeof e&&(e=[e]),e.forEach(e=>{S[e.toLowerCase()]=n})}function N(e){const n=d(e);return n&&!n.disableAutodetect}function T(e,n){const t=e;R.forEach(e=>{e[t]&&e[t](n)})}const I=Object.create(null),S=Object.create(null),R=[];let h=!0;const O="Could not find the language '{}', did you forget to load/include a language module?",p={disableAutodetect:!0,name:"Plain text",contains:[]};let C={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:D},L=!1;"undefined"!=typeof window&&window.addEventListener&&window.addEventListener("DOMContentLoaded",()=>{L&&u()},!1),Object.assign(n,{highlight:a,highlightAuto:E,highlightAll:u,highlightElement:g,highlightBlock:e=>(z("10.7.0","highlightBlock will be removed entirely in v12.0"),z("10.7.0","Please use highlightElement now."),g(e)),configure:e=>{C=J(C,e)},initHighlighting:()=>{u(),z("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")},initHighlightingOnLoad:()=>{u(),z("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")},registerLanguage:(e,t)=>{let a=null;try{a=t(n)}catch(t){if(K("Language definition for '{}' could not be registered.".replace("{}",e)),!h)throw t;K(t),a=p}a.name||(a.name=e),I[e]=a,a.rawDefinition=t.bind(null,n),a.aliases&&A(a.aliases,{languageName:e})},unregisterLanguage:e=>{delete I[e];for(const n of Object.keys(S))S[n]===e&&delete S[n]},listLanguages:()=>Object.keys(I),getLanguage:d,registerAliases:A,autoDetection:N,inherit:J,addPlugin:e=>{(e=>{e["before:highlightBlock"]&&!e["before:highlightElement"]&&(e["before:highlightElement"]=(n=>{e["before:highlightBlock"](Object.assign({block:n.el},n))})),e["after:highlightBlock"]&&!e["after:highlightElement"]&&(e["after:highlightElement"]=(n=>{e["after:highlightBlock"](Object.assign({block:n.el},n))}))})(e),R.push(e)},removePlugin:e=>{const n=R.indexOf(e);-1!==n&&R.splice(n,1)}}),n.debugMode=(()=>{h=!1}),n.safeMode=(()=>{h=!0}),n.versionString="11.10.0",n.regex={concat:o,lookahead:r,either:c,optional:i,anyNumberOfTimes:s};for(const n in G)"object"==typeof G[n]&&e(G[n]);return Object.assign(n,G),n},te=ne({});return te.newInstance=(()=>ne({})),te}();"object"==typeof exports&&"undefined"!=typeof module&&(module.exports=hljs),(()=>{var e=(()=>{"use strict";return e=>({name:"Excel formulae",aliases:["xlsx","xls"],case_insensitive:!0,keywords:{$pattern:/[a-zA-Z][\w\.]*/,built_in:["ABS","ACCRINT","ACCRINTM","ACOS","ACOSH","ACOT","ACOTH","AGGREGATE","ADDRESS","AMORDEGRC","AMORLINC","AND","ARABIC","AREAS","ASC","ASIN","ASINH","ATAN","ATAN2","ATANH","AVEDEV","AVERAGE","AVERAGEA","AVERAGEIF","AVERAGEIFS","BAHTTEXT","BASE","BESSELI","BESSELJ","BESSELK","BESSELY","BETADIST","BETA.DIST","BETAINV","BETA.INV","BIN2DEC","BIN2HEX","BIN2OCT","BINOMDIST","BINOM.DIST","BINOM.DIST.RANGE","BINOM.INV","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","CALL","CEILING","CEILING.MATH","CEILING.PRECISE","CELL","CHAR","CHIDIST","CHIINV","CHITEST","CHISQ.DIST","CHISQ.DIST.RT","CHISQ.INV","CHISQ.INV.RT","CHISQ.TEST","CHOOSE","CLEAN","CODE","COLUMN","COLUMNS","COMBIN","COMBINA","COMPLEX","CONCAT","CONCATENATE","CONFIDENCE","CONFIDENCE.NORM","CONFIDENCE.T","CONVERT","CORREL","COS","COSH","COT","COTH","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUPDAYBS","COUPDAYS","COUPDAYSNC","COUPNCD","COUPNUM","COUPPCD","COVAR","COVARIANCE.P","COVARIANCE.S","CRITBINOM","CSC","CSCH","CUBEKPIMEMBER","CUBEMEMBER","CUBEMEMBERPROPERTY","CUBERANKEDMEMBER","CUBESET","CUBESETCOUNT","CUBEVALUE","CUMIPMT","CUMPRINC","DATE","DATEDIF","DATEVALUE","DAVERAGE","DAY","DAYS","DAYS360","DB","DBCS","DCOUNT","DCOUNTA","DDB","DEC2BIN","DEC2HEX","DEC2OCT","DECIMAL","DEGREES","DELTA","DEVSQ","DGET","DISC","DMAX","DMIN","DOLLAR","DOLLARDE","DOLLARFR","DPRODUCT","DSTDEV","DSTDEVP","DSUM","DURATION","DVAR","DVARP","EDATE","EFFECT","ENCODEURL","EOMONTH","ERF","ERF.PRECISE","ERFC","ERFC.PRECISE","ERROR.TYPE","EUROCONVERT","EVEN","EXACT","EXP","EXPON.DIST","EXPONDIST","FACT","FACTDOUBLE","FALSE|0","F.DIST","FDIST","F.DIST.RT","FILTERXML","FIND","FINDB","F.INV","F.INV.RT","FINV","FISHER","FISHERINV","FIXED","FLOOR","FLOOR.MATH","FLOOR.PRECISE","FORECAST","FORECAST.ETS","FORECAST.ETS.CONFINT","FORECAST.ETS.SEASONALITY","FORECAST.ETS.STAT","FORECAST.LINEAR","FORMULATEXT","FREQUENCY","F.TEST","FTEST","FV","FVSCHEDULE","GAMMA","GAMMA.DIST","GAMMADIST","GAMMA.INV","GAMMAINV","GAMMALN","GAMMALN.PRECISE","GAUSS","GCD","GEOMEAN","GESTEP","GETPIVOTDATA","GROWTH","HARMEAN","HEX2BIN","HEX2DEC","HEX2OCT","HLOOKUP","HOUR","HYPERLINK","HYPGEOM.DIST","HYPGEOMDIST","IF","IFERROR","IFNA","IFS","IMABS","IMAGINARY","IMARGUMENT","IMCONJUGATE","IMCOS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMDIV","IMEXP","IMLN","IMLOG10","IMLOG2","IMPOWER","IMPRODUCT","IMREAL","IMSEC","IMSECH","IMSIN","IMSINH","IMSQRT","IMSUB","IMSUM","IMTAN","INDEX","INDIRECT","INFO","INT","INTERCEPT","INTRATE","IPMT","IRR","ISBLANK","ISERR","ISERROR","ISEVEN","ISFORMULA","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISODD","ISREF","ISTEXT","ISO.CEILING","ISOWEEKNUM","ISPMT","JIS","KURT","LARGE","LCM","LEFT","LEFTB","LEN","LENB","LINEST","LN","LOG","LOG10","LOGEST","LOGINV","LOGNORM.DIST","LOGNORMDIST","LOGNORM.INV","LOOKUP","LOWER","MATCH","MAX","MAXA","MAXIFS","MDETERM","MDURATION","MEDIAN","MID","MIDBs","MIN","MINIFS","MINA","MINUTE","MINVERSE","MIRR","MMULT","MOD","MODE","MODE.MULT","MODE.SNGL","MONTH","MROUND","MULTINOMIAL","MUNIT","N","NA","NEGBINOM.DIST","NEGBINOMDIST","NETWORKDAYS","NETWORKDAYS.INTL","NOMINAL","NORM.DIST","NORMDIST","NORMINV","NORM.INV","NORM.S.DIST","NORMSDIST","NORM.S.INV","NORMSINV","NOT","NOW","NPER","NPV","NUMBERVALUE","OCT2BIN","OCT2DEC","OCT2HEX","ODD","ODDFPRICE","ODDFYIELD","ODDLPRICE","ODDLYIELD","OFFSET","OR","PDURATION","PEARSON","PERCENTILE.EXC","PERCENTILE.INC","PERCENTILE","PERCENTRANK.EXC","PERCENTRANK.INC","PERCENTRANK","PERMUT","PERMUTATIONA","PHI","PHONETIC","PI","PMT","POISSON.DIST","POISSON","POWER","PPMT","PRICE","PRICEDISC","PRICEMAT","PROB","PRODUCT","PROPER","PV","QUARTILE","QUARTILE.EXC","QUARTILE.INC","QUOTIENT","RADIANS","RAND","RANDBETWEEN","RANK.AVG","RANK.EQ","RANK","RATE","RECEIVED","REGISTER.ID","REPLACE","REPLACEB","REPT","RIGHT","RIGHTB","ROMAN","ROUND","ROUNDDOWN","ROUNDUP","ROW","ROWS","RRI","RSQ","RTD","SEARCH","SEARCHB","SEC","SECH","SECOND","SERIESSUM","SHEET","SHEETS","SIGN","SIN","SINH","SKEW","SKEW.P","SLN","SLOPE","SMALL","SQL.REQUEST","SQRT","SQRTPI","STANDARDIZE","STDEV","STDEV.P","STDEV.S","STDEVA","STDEVP","STDEVPA","STEYX","SUBSTITUTE","SUBTOTAL","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SUMX2MY2","SUMX2PY2","SUMXMY2","SWITCH","SYD","T","TAN","TANH","TBILLEQ","TBILLPRICE","TBILLYIELD","T.DIST","T.DIST.2T","T.DIST.RT","TDIST","TEXT","TEXTJOIN","TIME","TIMEVALUE","T.INV","T.INV.2T","TINV","TODAY","TRANSPOSE","TREND","TRIM","TRIMMEAN","TRUE|0","TRUNC","T.TEST","TTEST","TYPE","UNICHAR","UNICODE","UPPER","VALUE","VAR","VAR.P","VAR.S","VARA","VARP","VARPA","VDB","VLOOKUP","WEBSERVICE","WEEKDAY","WEEKNUM","WEIBULL","WEIBULL.DIST","WORKDAY","WORKDAY.INTL","XIRR","XNPV","XOR","YEAR","YEARFRAC","YIELD","YIELDDISC","YIELDMAT","Z.TEST","ZTEST"]},contains:[{begin:/^=/,end:/[^=]/,returnEnd:!0,illegal:/=/,relevance:10},{className:"symbol",begin:/\b[A-Z]{1,2}\d+\b/,end:/[^\d]/,excludeEnd:!0,relevance:0},{className:"symbol",begin:/[A-Z]{0,2}\d*:[A-Z]{0,2}\d*/,relevance:0},e.BACKSLASH_ESCAPE,e.QUOTE_STRING_MODE,{className:"number",begin:e.NUMBER_RE+"(%)?",relevance:0},e.COMMENT(/\/\//,/$/,{relevance:0}),e.COMMENT(/\bN\(/,/\)/,{excludeBegin:!0,excludeEnd:!0,illegal:/\n/})]})})();hljs.registerLanguage("excel",e)})(),(()=>{var e=(()=>{"use strict";const e="[A-Za-z$_][0-9A-Za-z$_]*",n=["as","in","of","if","for","while","finally","var","new","function","do","return","void","else","break","catch","instanceof","with","throw","case","default","try","switch","continue","typeof","delete","let","yield","const","class","debugger","async","await","static","import","from","export","extends"],t=["true","false","null","undefined","NaN","Infinity"],a=["Object","Function","Boolean","Symbol","Math","Date","Number","BigInt","String","RegExp","Array","Float32Array","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Int32Array","Uint16Array","Uint32Array","BigInt64Array","BigUint64Array","Set","Map","WeakSet","WeakMap","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","Promise","Generator","GeneratorFunction","AsyncFunction","Reflect","Proxy","Intl","WebAssembly"],r=["Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError"],s=["setInterval","setTimeout","clearInterval","clearTimeout","require","exports","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape"],i=["arguments","this","super","console","window","document","localStorage","sessionStorage","module","global"],o=[].concat(s,a,r);return c=>{const l=c.regex,E=e,g={begin:/<[A-Za-z0-9\\._:-]+/,end:/\/[A-Za-z0-9\\._:-]+>|\/>/,isTrulyOpeningTag:(e,n)=>{const t=e[0].length+e.index,a=e.input[t];if("<"===a||","===a)return void n.ignoreMatch();let r;">"===a&&(((e,{after:n})=>{const t="</"+e[0].slice(1);return-1!==e.input.indexOf(t,n)})(e,{after:t})||n.ignoreMatch());const s=e.input.substring(t);((r=s.match(/^\s*=/))||(r=s.match(/^\s+extends\s+/))&&0===r.index)&&n.ignoreMatch()}},u={$pattern:e,keyword:n,literal:t,built_in:o,"variable.language":i},d="[0-9](_?[0-9])*",A=`\\.(${d})`,N="0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*",T={className:"number",variants:[{begin:`(\\b(${N})((${A})|\\.)?|(${A}))[eE][+-]?(${d})\\b`},{begin:`\\b(${N})\\b((${A})\\b|\\.)?|(${A})\\b`},{begin:"\\b(0|[1-9](_?[0-9])*)n\\b"},{begin:"\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"},{begin:"\\b0[bB][0-1](_?[0-1])*n?\\b"},{begin:"\\b0[oO][0-7](_?[0-7])*n?\\b"},{begin:"\\b0[0-7]+n?\\b"}],relevance:0},I={className:"subst",begin:"\\$\\{",end:"\\}",keywords:u,contains:[]},S={begin:".?html`",end:"",starts:{end:"`",returnEnd:!1,contains:[c.BACKSLASH_ESCAPE,I],subLanguage:"xml"}},R={begin:".?css`",end:"",starts:{end:"`",returnEnd:!1,contains:[c.BACKSLASH_ESCAPE,I],subLanguage:"css"}},h={begin:".?gql`",end:"",starts:{end:"`",returnEnd:!1,contains:[c.BACKSLASH_ESCAPE,I],subLanguage:"graphql"}},b={className:"string",begin:"`",end:"`",contains:[c.BACKSLASH_ESCAPE,I]},O={className:"comment",variants:[c.COMMENT(/\/\*\*(?!\/)/,"\\*/",{relevance:0,contains:[{begin:"(?=@[A-Za-z]+)",relevance:0,contains:[{className:"doctag",begin:"@[A-Za-z]+"},{className:"type",begin:"\\{",end:"\\}",excludeEnd:!0,excludeBegin:!0,relevance:0},{className:"variable",begin:E+"(?=\\s*(-)|$)",endsParent:!0,relevance:0},{begin:/(?=[^\n])\s/,relevance:0}]}]}),c.C_BLOCK_COMMENT_MODE,c.C_LINE_COMMENT_MODE]},m=[c.APOS_STRING_MODE,c.QUOTE_STRING_MODE,S,R,h,b,{match:/\$\d+/},T];I.contains=m.concat({begin:/\{/,end:/\}/,keywords:u,contains:["self"].concat(m)});const p=[].concat(O,I.contains),C=p.concat([{begin:/(\s*)\(/,end:/\)/,keywords:u,contains:["self"].concat(p)}]),L={className:"params",begin:/(\s*)\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:C},f={variants:[{match:[/class/,/\s+/,E,/\s+/,/extends/,/\s+/,l.concat(E,"(",l.concat(/\./,E),")*")],scope:{1:"keyword",3:"title.class",5:"keyword",7:"title.class.inherited"}},{match:[/class/,/\s+/,E],scope:{1:"keyword",3:"title.class"}}]},D={relevance:0,match:l.either(/\bJSON/,/\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/,/\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/,/\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),className:"title.class",keywords:{_:[...a,...r]}},_={variants:[{match:[/function/,/\s+/,E,/(?=\s*\()/]},{match:[/function/,/\s*(?=\()/]}],className:{1:"keyword",3:"title.function"},label:"func.def",contains:[L],illegal:/%/},M={match:l.concat(/\b/,(y=[...s,"super","import"].map(e=>e+"\\s*\\("),l.concat("(?!",y.join("|"),")")),E,l.lookahead(/\s*\(/)),className:"title.function",relevance:0};var y;const U={begin:l.concat(/\./,l.lookahead(l.concat(E,/(?![0-9A-Za-z$_(])/))),end:E,excludeBegin:!0,keywords:"prototype",className:"property",relevance:0},P={match:[/get|set/,/\s+/,E,/(?=\()/],className:{1:"keyword",3:"title.function"},contains:[{begin:/\(\)/},L]},v="(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|"+c.UNDERSCORE_IDENT_RE+")\\s*=>",B={match:[/const|var|let/,/\s+/,E,/\s*/,/=\s*/,/(async\s*)?/,l.lookahead(v)],keywords:"async",className:{1:"keyword",3:"title.function"},contains:[L]};return{name:"JavaScript",aliases:["js","jsx","mjs","cjs"],keywords:u,exports:{PARAMS_CONTAINS:C,CLASS_REFERENCE:D},illegal:/#(?![$_A-z])/,contains:[c.SHEBANG({label:"shebang",binary:"node",relevance:5}),{label:"use_strict",className:"meta",relevance:10,begin:/^\s*['"]use (strict|asm)['"]/},c.APOS_STRING_MODE,c.QUOTE_STRING_MODE,S,R,h,b,O,{match:/\$\d+/},T,D,{className:"attr",begin:E+l.lookahead(":"),relevance:0},B,{begin:"("+c.RE_STARTERS_RE+"|\\b(case|return|throw)\\b)\\s*",keywords:"return throw case",relevance:0,contains:[O,c.REGEXP_MODE,{className:"function",begin:v,returnBegin:!0,end:"\\s*=>",contains:[{className:"params",variants:[{begin:c.UNDERSCORE_IDENT_RE,relevance:0},{className:null,begin:/\(\s*\)/,skip:!0},{begin:/(\s*)\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:u,contains:C}]}]},{begin:/,/,relevance:0},{match:/\s+/,relevance:0},{variants:[{begin:"<>",end:"</>"},{match:/<[A-Za-z0-9\\._:-]+\s*\/>/},{begin:g.begin,"on:begin":g.isTrulyOpeningTag,end:g.end}],subLanguage:"xml",contains:[{begin:g.begin,end:g.end,skip:!0,contains:["self"]}]}]},_,{beginKeywords:"while if switch catch for"},{begin:"\\b(?!function)"+c.UNDERSCORE_IDENT_RE+"\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",returnBegin:!0,label:"func.def",contains:[L,c.inherit(c.TITLE_MODE,{begin:E,className:"title.function"})]},{match:/\.\.\./,relevance:0},U,{match:"\\$"+E,relevance:0},{match:[/\bconstructor(?=\s*\()/],className:{1:"title.function"},contains:[L]},M,{relevance:0,match:/\b[A-Z][A-Z_0-9]+\b/,className:"variable.constant"},f,P,{match:/\$[(.]/}]}}})();hljs.registerLanguage("javascript",e)})(),(()=>{var e=(()=>{"use strict";return e=>{const n=["true","false","null"],t={scope:"literal",beginKeywords:n.join(" ")};return{name:"JSON",
aliases:["jsonc"],keywords:{literal:n},contains:[{className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01},{match:/[{}[\],:]/,className:"punctuation",relevance:0},e.QUOTE_STRING_MODE,t,e.C_NUMBER_MODE,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE],illegal:"\\S"}}})();hljs.registerLanguage("json",e)})(),(()=>{var e=(()=>{"use strict";return e=>{const n={begin:/<\/?[A-Za-z_]/,end:">",subLanguage:"xml",relevance:0},t={variants:[{begin:/\[.+?\]\[.*?\]/,relevance:0},{begin:/\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,relevance:2},{begin:e.regex.concat(/\[.+?\]\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\/\/.*?\)/),relevance:2},{begin:/\[.+?\]\([./?&#].*?\)/,relevance:1},{begin:/\[.*?\]\(.*?\)/,relevance:0}],returnBegin:!0,contains:[{match:/\[(?=\])/},{className:"string",relevance:0,begin:"\\[",end:"\\]",excludeBegin:!0,returnEnd:!0},{className:"link",relevance:0,begin:"\\]\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0},{className:"symbol",relevance:0,begin:"\\]\\[",end:"\\]",excludeBegin:!0,excludeEnd:!0}]},a={className:"strong",contains:[],variants:[{begin:/_{2}(?!\s)/,end:/_{2}/},{begin:/\*{2}(?!\s)/,end:/\*{2}/}]},r={className:"emphasis",contains:[],variants:[{begin:/\*(?![*\s])/,end:/\*/},{begin:/_(?![_\s])/,end:/_/,relevance:0}]},s=e.inherit(a,{contains:[]}),i=e.inherit(r,{contains:[]});a.contains.push(i),r.contains.push(s);let o=[n,t];return[a,r,s,i].forEach(e=>{e.contains=e.contains.concat(o)}),o=o.concat(a,r),{name:"Markdown",aliases:["md","mkdown","mkd"],contains:[{className:"section",variants:[{begin:"^#{1,6}",end:"$",contains:o},{begin:"(?=^.+?\\n[=-]{2,}$)",contains:[{begin:"^[=-]*$"},{begin:"^",end:"\\n",contains:o}]}]},n,{className:"bullet",begin:"^[ \t]*([*+-]|(\\d+\\.))(?=\\s+)",end:"\\s+",excludeEnd:!0},a,r,{className:"quote",begin:"^>\\s+",contains:o,end:"$"},{className:"code",variants:[{begin:"(`{3,})[^`](.|\\n)*?\\1`*[ ]*"},{begin:"(~{3,})[^~](.|\\n)*?\\1~*[ ]*"},{begin:"```",end:"```+[ ]*$"},{begin:"~~~",end:"~~~+[ ]*$"},{begin:"`.+?`"},{begin:"(?=^( {4}|\\t))",contains:[{begin:"^( {4}|\\t)",end:"(\\n)$"}],relevance:0}]},{begin:"^[-\\*]{3,}",end:"$"},t,{begin:/^\[[^\n]+\]:/,returnBegin:!0,contains:[{className:"symbol",begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0},{className:"link",begin:/:\s*/,end:/$/,excludeBegin:!0}]},{scope:"literal",match:/&([a-zA-Z0-9]+|#[0-9]{1,7}|#[Xx][0-9a-fA-F]{1,6});/}]}}})();hljs.registerLanguage("markdown",e)})(),(()=>{var e=(()=>{"use strict";return e=>({name:"Plain text",aliases:["text","txt"],disableAutodetect:!0})})();hljs.registerLanguage("plaintext",e)})(),(()=>{var e=(()=>{"use strict";return e=>{const n=e.regex,t=/[\p{XID_Start}_]\p{XID_Continue}*/u,a=["and","as","assert","async","await","break","case","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","in","is","lambda","match","nonlocal|10","not","or","pass","raise","return","try","while","with","yield"],r={$pattern:/[A-Za-z]\w+|__\w+__/,keyword:a,built_in:["__import__","abs","all","any","ascii","bin","bool","breakpoint","bytearray","bytes","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","exec","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","print","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip"],literal:["__debug__","Ellipsis","False","None","NotImplemented","True"],type:["Any","Callable","Coroutine","Dict","List","Literal","Generic","Optional","Sequence","Set","Tuple","Type","Union"]},s={className:"meta",begin:/^(>>>|\.\.\.) /},i={className:"subst",begin:/\{/,end:/\}/,keywords:r,illegal:/#/},o={begin:/\{\{/,relevance:0},c={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,s],relevance:10},{begin:/([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,s],relevance:10},{begin:/([fF][rR]|[rR][fF]|[fF])'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE,s,o,i]},{begin:/([fF][rR]|[rR][fF]|[fF])"""/,end:/"""/,contains:[e.BACKSLASH_ESCAPE,s,o,i]},{begin:/([uU]|[rR])'/,end:/'/,relevance:10},{begin:/([uU]|[rR])"/,end:/"/,relevance:10},{begin:/([bB]|[bB][rR]|[rR][bB])'/,end:/'/},{begin:/([bB]|[bB][rR]|[rR][bB])"/,end:/"/},{begin:/([fF][rR]|[rR][fF]|[fF])'/,end:/'/,contains:[e.BACKSLASH_ESCAPE,o,i]},{begin:/([fF][rR]|[rR][fF]|[fF])"/,end:/"/,contains:[e.BACKSLASH_ESCAPE,o,i]},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},l="[0-9](_?[0-9])*",E=`(\\b(${l}))?\\.(${l})|\\b(${l})\\.`,g="\\b|"+a.join("|"),u={className:"number",relevance:0,variants:[{begin:`(\\b(${l})|(${E}))[eE][+-]?(${l})[jJ]?(?=${g})`},{begin:`(${E})[jJ]?`},{begin:`\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${g})`},{begin:`\\b0[bB](_?[01])+[lL]?(?=${g})`},{begin:`\\b0[oO](_?[0-7])+[lL]?(?=${g})`},{begin:`\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${g})`},{begin:`\\b(${l})[jJ](?=${g})`}]},d={className:"comment",begin:n.lookahead(/# type:/),end:/$/,keywords:r,contains:[{begin:/# type:/},{begin:/#/,end:/\b\B/,endsWithParent:!0}]},A={className:"params",variants:[{className:"",begin:/\(\s*\)/,skip:!0},{begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,keywords:r,contains:["self",s,u,c,e.HASH_COMMENT_MODE]}]};return i.contains=[c,u,s],{name:"Python",aliases:["py","gyp","ipython"],unicodeRegex:!0,keywords:r,illegal:/(<\/|\?)|=>/,contains:[s,u,{scope:"variable.language",match:/\bself\b/},{beginKeywords:"if",relevance:0},{match:/\bor\b/,scope:"keyword"},c,d,e.HASH_COMMENT_MODE,{match:[/\bdef/,/\s+/,t],scope:{1:"keyword",3:"title.function"},contains:[A]},{variants:[{match:[/\bclass/,/\s+/,t,/\s*/,/\(\s*/,t,/\s*\)/]},{match:[/\bclass/,/\s+/,t]}],scope:{1:"keyword",3:"title.class",6:"title.class.inherited"}},{className:"meta",begin:/^[\t ]*@/,end:/(?=#)|$/,contains:[u,A,c]}]}}})();hljs.registerLanguage("python",e)})(),(()=>{var e=(()=>{"use strict";return e=>{const n=e.regex,t=/(?:(?:[a-zA-Z]|\.[._a-zA-Z])[._a-zA-Z0-9]*)|\.(?!\d)/,a=n.either(/0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/,/0[xX][0-9a-fA-F]+(?:[pP][+-]?\d+)?[Li]?/,/(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?[Li]?/),r=/[=!<>:]=|\|\||&&|:::?|<-|<<-|->>|->|\|>|[-+*\/?!$&|:<=>@^~]|\*\*/,s=n.either(/[()]/,/[{}]/,/\[\[/,/[[\]]/,/\\/,/,/);return{name:"R",keywords:{$pattern:t,keyword:"function if in break next repeat else for while",literal:"NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10",built_in:"LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm"},contains:[e.COMMENT(/#'/,/$/,{contains:[{scope:"doctag",match:/@examples/,starts:{end:n.lookahead(n.either(/\n^#'\s*(?=@[a-zA-Z]+)/,/\n^(?!#')/)),endsParent:!0}},{scope:"doctag",begin:"@param",end:/$/,contains:[{scope:"variable",variants:[{match:t},{match:/`(?:\\.|[^`\\])+`/}],endsParent:!0}]},{scope:"doctag",match:/@[a-zA-Z]+/},{scope:"keyword",match:/\\[a-zA-Z]+/}]}),e.HASH_COMMENT_MODE,{scope:"string",contains:[e.BACKSLASH_ESCAPE],variants:[e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\(/,end:/\)(-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\{/,end:/\}(-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]"(-*)\[/,end:/\](-*)"/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\(/,end:/\)(-*)'/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\{/,end:/\}(-*)'/}),e.END_SAME_AS_BEGIN({begin:/[rR]'(-*)\[/,end:/\](-*)'/}),{begin:'"',end:'"',relevance:0},{begin:"'",end:"'",relevance:0}]},{relevance:0,variants:[{scope:{1:"operator",2:"number"},match:[r,a]},{scope:{1:"operator",2:"number"},match:[/%[^%]*%/,a]},{scope:{1:"punctuation",2:"number"},match:[s,a]},{scope:{2:"number"},match:[/[^a-zA-Z0-9._]|^/,a]}]},{scope:{3:"operator"},match:[t,/\s+/,/<-/,/\s+/]},{scope:"operator",relevance:0,variants:[{match:r},{match:/%[^%]*%/}]},{scope:"punctuation",relevance:0,match:s},{begin:"`",end:"`",contains:[{begin:/\\./}]}]}}})();hljs.registerLanguage("r",e)})(),(()=>{var e=(()=>{"use strict";return e=>{const n=e.regex,t=e.COMMENT("--","$"),a=["true","false","unknown"],r=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],s=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],i=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],o=s,c=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year","add","asc","collation","desc","limit","final","first","last","view"].filter(e=>!s.includes(e)),l={begin:n.concat(/\b/,n.either(...o),/\s*\(/),relevance:0,keywords:{built_in:o}};return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:((e,{exceptions:n,when:t}={})=>{const a=t;return n=n||[],e.map(e=>e.match(/\|\d+$/)||n.includes(e)?e:a(e)?e+"|0":e)})(c,{when:e=>e.length<3}),literal:a,type:r,built_in:["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","strftime","system_user","current_time","localtime","current_timestamp","localtimestamp"]},contains:[{begin:n.either(...i),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:c.concat(i),literal:a,type:r}},{className:"type",begin:n.either("double precision","large object","with timezone","without timezone")},l,{className:"variable",begin:/@[a-z0-9][a-z0-9_]*/},{className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/"/,end:/"/,contains:[{begin:/""/}]},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,{className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0}]}}})();hljs.registerLanguage("sql",e)})(),(()=>{var e=(()=>{"use strict";return e=>({name:"DAX",case_insensitive:!0,keywords:{$pattern:/\b[\w\.]+/,keyword:["AXIS","ROWS","COLUMN","DEFINE","DENSIFY","EVALUATE","GROUP","MEASURE","MPARAMETER","ORDER","BY","RETURN","START","AT","TABLE","TOTAL","VAR","WITH","VISUAL","SHAPE","IN","TRUE","FALSE","NOT","ASC","DESC","SKIP","DENSE","BLANKS","FIRST","LAST","WEEK","BOTH","NONE","ONEWAY","KEEP","REL"],built_in:["ABS","ACCRINT","ACCRINTM","ACOS","ACOSH","ACOT","ACOTH","ADDCOLUMNS","ADDMISSINGITEMS","ALL","ALLCROSSFILTERED","ALLEXCEPT","ALLNOBLANKROW","ALLSELECTED","AMORDEGRC","AMORLINC","AND","APPROXIMATEDISTINCTCOUNT","ASIN","ASINH","ATAN","ATANH","AVERAGE","AVERAGEA","AVERAGEX","BETA.DIST","BETA.INV","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","BLANK","CALCULATE","CALCULATETABLE","CALENDAR","CALENDARAUTO","CEILING","CHISQ.DIST","CHISQ.DIST.RT","CHISQ.INV","CHISQ.INV.RT","CLOSINGBALANCEMONTH","CLOSINGBALANCEQUARTER","CLOSINGBALANCEYEAR","COALESCE","COLLAPSE","COLLAPSEALL","COLUMNSTATISTICS","COMBIN","COMBINA","COMBINEVALUES","CONCATENATE","CONCATENATEX","CONFIDENCE.NORM","CONFIDENCE.T","CONTAINS","CONTAINSROW","CONTAINSSTRING","CONTAINSSTRINGEXACT","CONVERT","COS","COSH","COT","COTH","COUNT","COUNTA","COUNTAX","COUNTBLANK","COUNTROWS","COUNTX","COUPDAYBS","COUPDAYS","COUPDAYSNC","COUPNCD","COUPNUM","COUPPCD","CROSSFILTER","CROSSJOIN","CUMIPMT","CUMPRINC","CURRENCY","CURRENTGROUP","CUSTOMDATA","DATATABLE","DATE","DATEADD","DATEDIFF","DATESBETWEEN","DATESINPERIOD","DATESMTD","DATESQTD","DATESYTD","DATEVALUE","DAY","DB","DDB","DEGREES","DETAILROWS","DISC","DISTINCT","DISTINCTCOUNT","DISTINCTCOUNTNOBLANK","DIVIDE","DOLLARDE","DOLLARFR","DURATION","EARLIER","EARLIEST","EDATE","EFFECT","ENDOFMONTH","ENDOFQUARTER","ENDOFYEAR","EOMONTH","ERROR","EVALUATEANDLOG","EVEN","EXACT","EXCEPT","EXP","EXPAND","EXPANDALL","EXPON.DIST","FACT","FALSE","FILTER","FILTERS","FIND","FIRST","FIRSTDATE","FIRSTNONBLANK","FIRSTNONBLANKVALUE","FIXED","FLOOR","FORMAT","FV","GCD","GENERATE","GENERATEALL","GENERATESERIES","GEOMEAN","GEOMEANX","GROUPBY","HASH","HASONEFILTER","HASONEVALUE","HOUR","IF","IF.EAGER","IFERROR","IGNORE","INDEX","INT","INTERSECT","INTRATE","IPMT","ISAFTER","ISATLEVEL","ISBLANK","ISCROSSFILTERED","ISEMPTY","ISERROR","ISEVEN","ISFILTERED","ISINSCOPE","ISLOGICAL","ISNONTEXT","ISNUMBER","ISO.CEILING","ISODD","ISONORAFTER","ISPMT","ISSELECTEDMEASURE","ISSUBTOTAL","ISTEXT","KEEPFILTERS","KEYWORDMATCH","LAST","LASTDATE","LASTNONBLANK","LASTNONBLANKVALUE","LCM","LEFT","LEN","LINEST","LINESTX","LN","LOG","LOG10","LOOKUP","LOOKUPVALUE","LOWER","MATCHBY","MAX","MAXA","MAXX","MDURATION","MEDIAN","MEDIANX","MID","MIN","MINA","MINUTE","MINX","MOD","MONTH","MOVINGAVERAGE","MROUND","NAMEOF","NATURALINNERJOIN","NATURALLEFTOUTERJOIN","NETWORKDAYS","NEXT","NEXTDAY","NEXTMONTH","NEXTQUARTER","NEXTYEAR","NOMINAL","NONVISUAL","NORM.DIST","NORM.INV","NORM.S.DIST","NORM.S.INV","NOT","NOW","NPER","ODD","ODDFPRICE","ODDFYIELD","ODDLPRICE","ODDLYIELD","OFFSET","OPENINGBALANCEMONTH","OPENINGBALANCEQUARTER","OPENINGBALANCEYEAR","OR","ORDERBY","PARALLELPERIOD","PARTITIONBY","PATH","PATHCONTAINS","PATHITEM","PATHITEMREVERSE","PATHLENGTH","PDURATION","PERCENTILE.EXC","PERCENTILE.INC","PERCENTILEX.EXC","PERCENTILEX.INC","PERMUT","PI","PMT","POISSON.DIST","POWER","PPMT","PREVIOUS","PREVIOUSDAY","PREVIOUSMONTH","PREVIOUSQUARTER","PREVIOUSYEAR","PRICE","PRICEDISC","PRICEMAT","PRODUCT","PRODUCTX","PV","QUARTER","QUOTIENT","RADIANS","RAND","RANDBETWEEN","RANGE","RANK","RANK.EQ","RANKX","RATE","RECEIVED","RELATED","RELATEDTABLE","REMOVEFILTERS","REPLACE","REPT","RIGHT","ROLLUP","ROLLUPADDISSUBTOTAL","ROLLUPGROUP","ROLLUPISSUBTOTAL","ROUND","ROUNDDOWN","ROUNDUP","ROW","ROWNUMBER","RRI","RUNNINGSUM","SAMEPERIODLASTYEAR","SAMPLE","SAMPLEAXISWITHLOCALMINMAX","SAMPLECARTESIANPOINTSBYCOVER","SEARCH","SECOND","SELECTCOLUMNS","SELECTEDMEASURE","SELECTEDMEASUREFORMATSTRING","SELECTEDMEASURENAME","SELECTEDVALUE","SIGN","SIN","SINH","SLN","SQRT","SQRTPI","STARTOFMONTH","STARTOFQUARTER","STARTOFYEAR","STDEV.P","STDEV.S","STDEVX.P","STDEVX.S","SUBSTITUTE","SUBSTITUTEWITHINDEX","SUM","SUMMARIZE","SUMMARIZECOLUMNS","SUMX","SWITCH","SYD","T.DIST","T.DIST.2T","T.DIST.RT","T.INV","T.INV.2T","TAN","TANH","TBILLEQ","TBILLPRICE","TBILLYIELD","TIME","TIMEVALUE","TOCSV","TODAY","TOJSON","TOPN","TOPNPERLEVEL","TOPNSKIP","TOTALMTD","TOTALQTD","TOTALYTD","TREATAS","TRIM","TRUE","TRUNC","UNICHAR","UNICODE","UNION","UPPER","USERCULTURE","USERELATIONSHIP","USERNAME","USEROBJECTID","USERPRINCIPALNAME","UTCNOW","UTCTODAY","VALUE","VALUES","VAR.P","VAR.S","VARX.P","VARX.S","VDB","WEEKDAY","WEEKNUM","WINDOW","XIRR","XNPV","YEAR","YEARFRAC","YIELD","YIELDDISC","YIELDMAT"],type:["BINARY","BOOLEAN","CURRENCY","DATETIME","INTEGER","STRING","VARIANT"]},contains:[e.COMMENT(/(?:\/\/|\-\-)/,"$"),{className:"string",begin:/"(?:[^"]|"")*"/},{className:"number",begin:/\b-?\d+(\.\d+)?\b/},{className:"operator",begin:/[-+*/^]|==?|&&?|\|\||<(?:=>?|<|>)?|>[>=]?/},{className:"punctuation",begin:/[;:()\[\]\{\},.]/},{className:"entity",begin:/\[.+\]/}]})})();hljs.registerLanguage("dax",e)})(),(()=>{var e=(()=>{"use strict";return e=>({name:"M",case_insensitive:!0,keywords:{$pattern:/\b[\w\.]+/,keyword:["and","as","each","else","error","false","if","in","is","let","meta","not","nullable","otherwise","section","shared","then","true","try","type","type","with","section","shared","otherwise","nullable","not","meta","let","is","in","if","false","error","else","each","as","and"],built_in:["Binary","Date","DateTime","DateTimeZone","Duration","Function","List","Logical","Number","Record","Table","Text","Time","Type","Value"],literal:["null"]},contains:[e.COMMENT("--","$"),{className:"string",begin:/"(?:[^"]|"")*"(?!")/},{className:"number",begin:/\b-?\d+(\.\d+)?\b/},{className:"operator",begin:/[-+*/^]|==?|&&?|\|\||<(?:=>?|<|>)?|>[>=]?/},{className:"punctuation",begin:/[;:()\[\]\{\},.]/},{className:"entity",begin:/\[.+\]/}]})})();hljs.registerLanguage("m",e)})(),(()=>{var e=(()=>{"use strict";return e=>({name:"VBA",case_insensitive:!0,keywords:{$pattern:/\b[\w\.]+/,keyword:["Dim","As","Sub","Function","End","If","Then","Else","ElseIf","For","Each","In","Next","While","Do","Loop","Until","Exit","With","Set","Let","Call","Private","Public","Const","ReDim","On","Error","Resume","GoTo","Select","Case","Is","True","False","Not","And","Or","ByRef","ByVal","Optional","New","Nothing","Me","TypeOf","String","Double","Long","Variant","Boolean","Integer"],built_in:["Application","ActiveWorkbook","ActiveSheet","Cells","Range","Worksheets","Sheets","ThisWorkbook","MsgBox","InputBox","Debug","Err","CInt","CLng","CSng","CStr","Date","Now","Time","Len","Mid","Left","Right","Trim","LTrim","RTrim","Replace","Split","Join","Instr","UCase","LCase","IsEmpty","IsNull","IsNumeric","Fix","Int","Abs","Rnd","Sqr","Timer","DoEvents"],literal:["Nothing","Null","True","False","Empty"]},contains:[e.COMMENT("'","$"),{className:"string",begin:/"(?:[^"]|"")*"(?!")/},{className:"number",begin:/\b-?\d+(\.\d+)?([eE][-+]?\d+)?\b/},{className:"operator",begin:/[-+*/^=&<>]|<=|>=|<>/},{className:"punctuation",begin:/[();,]/},{className:"entity",begin:/\b[A-Za-z_]\w*(?=\()/,relevance:0}]})})();hljs.registerLanguage("vba",e)})();